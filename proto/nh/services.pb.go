// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: nodehub/services.proto

package nh

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetServiceRouteRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceCode int32                  `protobuf:"varint,1,opt,name=service_code,json=serviceCode,proto3"`
	xxx_hidden_SessionId   string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_NodeId      string                 `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SetServiceRouteRequest) Reset() {
	*x = SetServiceRouteRequest{}
	mi := &file_nodehub_services_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetServiceRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServiceRouteRequest) ProtoMessage() {}

func (x *SetServiceRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SetServiceRouteRequest) GetServiceCode() int32 {
	if x != nil {
		return x.xxx_hidden_ServiceCode
	}
	return 0
}

func (x *SetServiceRouteRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *SetServiceRouteRequest) GetNodeId() string {
	if x != nil {
		return x.xxx_hidden_NodeId
	}
	return ""
}

func (x *SetServiceRouteRequest) SetServiceCode(v int32) {
	x.xxx_hidden_ServiceCode = v
}

func (x *SetServiceRouteRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *SetServiceRouteRequest) SetNodeId(v string) {
	x.xxx_hidden_NodeId = v
}

type SetServiceRouteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceCode int32
	SessionId   string
	NodeId      string
}

func (b0 SetServiceRouteRequest_builder) Build() *SetServiceRouteRequest {
	m0 := &SetServiceRouteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ServiceCode = b.ServiceCode
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_NodeId = b.NodeId
	return m0
}

type Session struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId  string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_RemoteAddr string                 `protobuf:"bytes,2,opt,name=remote_addr,json=remoteAddr,proto3"`
	xxx_hidden_Type       string                 `protobuf:"bytes,3,opt,name=type,proto3"`
	xxx_hidden_Metadata   *[]*Session_Metadata   `protobuf:"bytes,4,rep,name=metadata,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_nodehub_services_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *Session) GetRemoteAddr() string {
	if x != nil {
		return x.xxx_hidden_RemoteAddr
	}
	return ""
}

func (x *Session) GetType() string {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return ""
}

func (x *Session) GetMetadata() []*Session_Metadata {
	if x != nil {
		if x.xxx_hidden_Metadata != nil {
			return *x.xxx_hidden_Metadata
		}
	}
	return nil
}

func (x *Session) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *Session) SetRemoteAddr(v string) {
	x.xxx_hidden_RemoteAddr = v
}

func (x *Session) SetType(v string) {
	x.xxx_hidden_Type = v
}

func (x *Session) SetMetadata(v []*Session_Metadata) {
	x.xxx_hidden_Metadata = &v
}

type Session_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId  string
	RemoteAddr string
	Type       string
	Metadata   []*Session_Metadata
}

func (b0 Session_builder) Build() *Session {
	m0 := &Session{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_RemoteAddr = b.RemoteAddr
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Metadata = &b.Metadata
	return m0
}

type RemoveServiceRouteRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceCode int32                  `protobuf:"varint,1,opt,name=service_code,json=serviceCode,proto3"`
	xxx_hidden_SessionId   string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RemoveServiceRouteRequest) Reset() {
	*x = RemoveServiceRouteRequest{}
	mi := &file_nodehub_services_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveServiceRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceRouteRequest) ProtoMessage() {}

func (x *RemoveServiceRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RemoveServiceRouteRequest) GetServiceCode() int32 {
	if x != nil {
		return x.xxx_hidden_ServiceCode
	}
	return 0
}

func (x *RemoveServiceRouteRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *RemoveServiceRouteRequest) SetServiceCode(v int32) {
	x.xxx_hidden_ServiceCode = v
}

func (x *RemoveServiceRouteRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

type RemoveServiceRouteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceCode int32
	SessionId   string
}

func (b0 RemoveServiceRouteRequest_builder) Build() *RemoveServiceRouteRequest {
	m0 := &RemoveServiceRouteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ServiceCode = b.ServiceCode
	x.xxx_hidden_SessionId = b.SessionId
	return m0
}

type ReplaceServiceRouteRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_OldNodeId string                 `protobuf:"bytes,1,opt,name=old_node_id,json=oldNodeId,proto3"`
	xxx_hidden_NewNodeId string                 `protobuf:"bytes,2,opt,name=new_node_id,json=newNodeId,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ReplaceServiceRouteRequest) Reset() {
	*x = ReplaceServiceRouteRequest{}
	mi := &file_nodehub_services_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplaceServiceRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceServiceRouteRequest) ProtoMessage() {}

func (x *ReplaceServiceRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReplaceServiceRouteRequest) GetOldNodeId() string {
	if x != nil {
		return x.xxx_hidden_OldNodeId
	}
	return ""
}

func (x *ReplaceServiceRouteRequest) GetNewNodeId() string {
	if x != nil {
		return x.xxx_hidden_NewNodeId
	}
	return ""
}

func (x *ReplaceServiceRouteRequest) SetOldNodeId(v string) {
	x.xxx_hidden_OldNodeId = v
}

func (x *ReplaceServiceRouteRequest) SetNewNodeId(v string) {
	x.xxx_hidden_NewNodeId = v
}

type ReplaceServiceRouteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	OldNodeId string
	NewNodeId string
}

func (b0 ReplaceServiceRouteRequest_builder) Build() *ReplaceServiceRouteRequest {
	m0 := &ReplaceServiceRouteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_OldNodeId = b.OldNodeId
	x.xxx_hidden_NewNodeId = b.NewNodeId
	return m0
}

type IsSessionExistRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *IsSessionExistRequest) Reset() {
	*x = IsSessionExistRequest{}
	mi := &file_nodehub_services_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsSessionExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSessionExistRequest) ProtoMessage() {}

func (x *IsSessionExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IsSessionExistRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *IsSessionExistRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

type IsSessionExistRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId string
}

func (b0 IsSessionExistRequest_builder) Build() *IsSessionExistRequest {
	m0 := &IsSessionExistRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	return m0
}

type IsSessionExistResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Exist bool                   `protobuf:"varint,1,opt,name=exist,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IsSessionExistResponse) Reset() {
	*x = IsSessionExistResponse{}
	mi := &file_nodehub_services_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsSessionExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsSessionExistResponse) ProtoMessage() {}

func (x *IsSessionExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IsSessionExistResponse) GetExist() bool {
	if x != nil {
		return x.xxx_hidden_Exist
	}
	return false
}

func (x *IsSessionExistResponse) SetExist(v bool) {
	x.xxx_hidden_Exist = v
}

type IsSessionExistResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Exist bool
}

func (b0 IsSessionExistResponse_builder) Build() *IsSessionExistResponse {
	m0 := &IsSessionExistResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Exist = b.Exist
	return m0
}

type SessionCountResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Count int32                  `protobuf:"varint,1,opt,name=count,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SessionCountResponse) Reset() {
	*x = SessionCountResponse{}
	mi := &file_nodehub_services_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionCountResponse) ProtoMessage() {}

func (x *SessionCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SessionCountResponse) GetCount() int32 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *SessionCountResponse) SetCount(v int32) {
	x.xxx_hidden_Count = v
}

type SessionCountResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Count int32
}

func (b0 SessionCountResponse_builder) Build() *SessionCountResponse {
	m0 := &SessionCountResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Count = b.Count
	return m0
}

type SendReplyRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	xxx_hidden_Reply     *Reply                 `protobuf:"bytes,2,opt,name=reply,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SendReplyRequest) Reset() {
	*x = SendReplyRequest{}
	mi := &file_nodehub_services_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReplyRequest) ProtoMessage() {}

func (x *SendReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SendReplyRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *SendReplyRequest) GetReply() *Reply {
	if x != nil {
		return x.xxx_hidden_Reply
	}
	return nil
}

func (x *SendReplyRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

func (x *SendReplyRequest) SetReply(v *Reply) {
	x.xxx_hidden_Reply = v
}

func (x *SendReplyRequest) HasReply() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Reply != nil
}

func (x *SendReplyRequest) ClearReply() {
	x.xxx_hidden_Reply = nil
}

type SendReplyRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId string
	Reply     *Reply
}

func (b0 SendReplyRequest_builder) Build() *SendReplyRequest {
	m0 := &SendReplyRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	x.xxx_hidden_Reply = b.Reply
	return m0
}

type SendReplyResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success bool                   `protobuf:"varint,1,opt,name=success,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SendReplyResponse) Reset() {
	*x = SendReplyResponse{}
	mi := &file_nodehub_services_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReplyResponse) ProtoMessage() {}

func (x *SendReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SendReplyResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *SendReplyResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
}

type SendReplyResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// success 为 false 时，表示会话不存在
	Success bool
}

func (b0 SendReplyResponse_builder) Build() *SendReplyResponse {
	m0 := &SendReplyResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Success = b.Success
	return m0
}

type CloseSessionRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CloseSessionRequest) Reset() {
	*x = CloseSessionRequest{}
	mi := &file_nodehub_services_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionRequest) ProtoMessage() {}

func (x *CloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CloseSessionRequest) GetSessionId() string {
	if x != nil {
		return x.xxx_hidden_SessionId
	}
	return ""
}

func (x *CloseSessionRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = v
}

type CloseSessionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId string
}

func (b0 CloseSessionRequest_builder) Build() *CloseSessionRequest {
	m0 := &CloseSessionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SessionId = b.SessionId
	return m0
}

type CloseSessionResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success bool                   `protobuf:"varint,1,opt,name=success,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CloseSessionResponse) Reset() {
	*x = CloseSessionResponse{}
	mi := &file_nodehub_services_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSessionResponse) ProtoMessage() {}

func (x *CloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CloseSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *CloseSessionResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
}

type CloseSessionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// success 为 false 时，表示会话不存在
	Success bool
}

func (b0 CloseSessionResponse_builder) Build() *CloseSessionResponse {
	m0 := &CloseSessionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Success = b.Success
	return m0
}

type ChangeStateRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State string                 `protobuf:"bytes,1,opt,name=state,proto3"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChangeStateRequest) Reset() {
	*x = ChangeStateRequest{}
	mi := &file_nodehub_services_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStateRequest) ProtoMessage() {}

func (x *ChangeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ChangeStateRequest) GetState() string {
	if x != nil {
		return x.xxx_hidden_State
	}
	return ""
}

func (x *ChangeStateRequest) SetState(v string) {
	x.xxx_hidden_State = v
}

type ChangeStateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State string
}

func (b0 ChangeStateRequest_builder) Build() *ChangeStateRequest {
	m0 := &ChangeStateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	return m0
}

type Session_Metadata struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key    string                 `protobuf:"bytes,1,opt,name=key,proto3"`
	xxx_hidden_Values []string               `protobuf:"bytes,2,rep,name=values,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Session_Metadata) Reset() {
	*x = Session_Metadata{}
	mi := &file_nodehub_services_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session_Metadata) ProtoMessage() {}

func (x *Session_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_nodehub_services_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Session_Metadata) GetKey() string {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return ""
}

func (x *Session_Metadata) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *Session_Metadata) SetKey(v string) {
	x.xxx_hidden_Key = v
}

func (x *Session_Metadata) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

type Session_Metadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key    string
	Values []string
}

func (b0 Session_Metadata_builder) Build() *Session_Metadata {
	m0 := &Session_Metadata{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Values = b.Values
	return m0
}

var File_nodehub_services_proto protoreflect.FileDescriptor

var file_nodehub_services_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75,
	0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x07, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x34, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x49, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x49,
	0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x14, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x10, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x32, 0xf2, 0x04, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x53, 0x0a, 0x0e, 0x49, 0x73, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x49, 0x73,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x49, 0x73,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x19, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x8a, 0x01, 0x0a, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x08, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x79, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x6e,
	0x6f, 0x64, 0x65, 0x68, 0x75, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x68, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_nodehub_services_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_nodehub_services_proto_goTypes = []any{
	(*SetServiceRouteRequest)(nil),     // 0: nodehub.SetServiceRouteRequest
	(*Session)(nil),                    // 1: nodehub.Session
	(*RemoveServiceRouteRequest)(nil),  // 2: nodehub.RemoveServiceRouteRequest
	(*ReplaceServiceRouteRequest)(nil), // 3: nodehub.ReplaceServiceRouteRequest
	(*IsSessionExistRequest)(nil),      // 4: nodehub.IsSessionExistRequest
	(*IsSessionExistResponse)(nil),     // 5: nodehub.IsSessionExistResponse
	(*SessionCountResponse)(nil),       // 6: nodehub.SessionCountResponse
	(*SendReplyRequest)(nil),           // 7: nodehub.SendReplyRequest
	(*SendReplyResponse)(nil),          // 8: nodehub.SendReplyResponse
	(*CloseSessionRequest)(nil),        // 9: nodehub.CloseSessionRequest
	(*CloseSessionResponse)(nil),       // 10: nodehub.CloseSessionResponse
	(*ChangeStateRequest)(nil),         // 11: nodehub.ChangeStateRequest
	(*Session_Metadata)(nil),           // 12: nodehub.Session.Metadata
	(*Reply)(nil),                      // 13: nodehub.Reply
	(*emptypb.Empty)(nil),              // 14: google.protobuf.Empty
}
var file_nodehub_services_proto_depIdxs = []int32{
	12, // 0: nodehub.Session.metadata:type_name -> nodehub.Session.Metadata
	13, // 1: nodehub.SendReplyRequest.reply:type_name -> nodehub.Reply
	4,  // 2: nodehub.Gateway.IsSessionExist:input_type -> nodehub.IsSessionExistRequest
	14, // 3: nodehub.Gateway.ListSessions:input_type -> google.protobuf.Empty
	14, // 4: nodehub.Gateway.SessionCount:input_type -> google.protobuf.Empty
	9,  // 5: nodehub.Gateway.CloseSession:input_type -> nodehub.CloseSessionRequest
	0,  // 6: nodehub.Gateway.SetServiceRoute:input_type -> nodehub.SetServiceRouteRequest
	2,  // 7: nodehub.Gateway.RemoveServiceRoute:input_type -> nodehub.RemoveServiceRouteRequest
	3,  // 8: nodehub.Gateway.ReplaceServiceRoute:input_type -> nodehub.ReplaceServiceRouteRequest
	7,  // 9: nodehub.Gateway.SendReply:input_type -> nodehub.SendReplyRequest
	11, // 10: nodehub.Node.ChangeState:input_type -> nodehub.ChangeStateRequest
	14, // 11: nodehub.Node.Shutdown:input_type -> google.protobuf.Empty
	5,  // 12: nodehub.Gateway.IsSessionExist:output_type -> nodehub.IsSessionExistResponse
	1,  // 13: nodehub.Gateway.ListSessions:output_type -> nodehub.Session
	6,  // 14: nodehub.Gateway.SessionCount:output_type -> nodehub.SessionCountResponse
	10, // 15: nodehub.Gateway.CloseSession:output_type -> nodehub.CloseSessionResponse
	14, // 16: nodehub.Gateway.SetServiceRoute:output_type -> google.protobuf.Empty
	14, // 17: nodehub.Gateway.RemoveServiceRoute:output_type -> google.protobuf.Empty
	14, // 18: nodehub.Gateway.ReplaceServiceRoute:output_type -> google.protobuf.Empty
	8,  // 19: nodehub.Gateway.SendReply:output_type -> nodehub.SendReplyResponse
	14, // 20: nodehub.Node.ChangeState:output_type -> google.protobuf.Empty
	14, // 21: nodehub.Node.Shutdown:output_type -> google.protobuf.Empty
	12, // [12:22] is the sub-list for method output_type
	2,  // [2:12] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_nodehub_services_proto_init() }
func file_nodehub_services_proto_init() {
	if File_nodehub_services_proto != nil {
		return
	}
	file_nodehub_client_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nodehub_services_proto_rawDesc), len(file_nodehub_services_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_nodehub_services_proto_goTypes,
		DependencyIndexes: file_nodehub_services_proto_depIdxs,
		MessageInfos:      file_nodehub_services_proto_msgTypes,
	}.Build()
	File_nodehub_services_proto = out.File
	file_nodehub_services_proto_goTypes = nil
	file_nodehub_services_proto_depIdxs = nil
}
